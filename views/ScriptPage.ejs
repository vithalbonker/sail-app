<html>
   <head>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.5/themes/default/style.min.css" />
      <link rel="stylesheet" type="text/css" href="/public/css/styles.css" />
      <style>
         #script-tree-border{
           border:1px solid black;
           margin: 90px 0px 0px 0px;
           /* height:700px; */
           width:280px;
           font-family: Arial, Helvetica, sans-serif;
           font-size: 11px;
         }

         #tree-create-folder, #tree-create-script, #tree-node-rename, #tree-node-delete{
           font-size:11px;
           display: inline-block;
           margin: 10px 0px 6px 6px;
         }

         #tree-node-delete{
           margin-left: 35px;
         }

         #jstree{
           border:1px solid black;
           height:642px;
           width:280px;
           overflow:scroll;
         }

         img{
           margin: 5px 15px;
         }

         #script-tree-border, #script_pane{
           display:inline-table;
         }

         #script_pane{
           border: 1px solid #ccc;
           height: 800px;
           width: 950px;
           font-family: Arial, Helvetica, sans-serif;
           font-size: 11px;
           overflow-y: scroll;
         }

         #scriptName, #scriptTreePath{
           margin: 5px 10px;
           width: 300px;
         }
      </style>
      <style>
        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }

        /* Change background color of buttons on hover */
        .tab button:hover {
            background-color: #ddd;
        }

        /* Create an active/current tablink class */
        .tab button.active {
            background-color: #ccc;
            font-weight: bold;
            color: blue;
        }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            /* border: 1px solid #ccc; */
            border-top: none;
            height:500;
            width:700;
        }
      </style>
   </head>
   <body>
      <div id="script-page">
          <div id="script-tree-border">
            <span><strong>Actions</strong></span>
            <br>
            <img src="/public/images/addfolder-32-32.png" alt="Add Folder" onclick="addFolder();" />
            <img src="/public/images/addscript-32-32.png" alt="Add Script" onclick="addScript();" />
            <img src="/public/images/edit-32-32.png" alt="Rename" onclick="renameNode();" />
            <img src="/public/images/delete-32-32.png" alt="Delete" onclick="deleteNode();" />
            <div id="jstree"></div>
          </div>

          <div id="script_pane">
                <label>Script Name:</label>
                <input type="text" name="scriptName" id="scriptName" readonly/>
                <br>
                <label>Script Path:</label>
                <input type="text" name="scriptTreePath" id="scriptTreePath" readonly/>
                <br>
                <br>

                <div class="tab">
                    <button class="tablinks" id="defaultTab" onclick="openTab(event, 'Automation')">Automation</button>
                    <button class="tablinks" onclick="openTab(event, 'Manual')">Manual Testcase</button>
                    <button class="tablinks" onclick="openTab(event, 'Testdata')">Testdata</button>
                </div>

                <div id="Automation" class="tabcontent">
                    <h3>Automation</h3>
                    <p>This tab is for automation</p>
                </div>

                <div id="Manual" class="tabcontent">
                    <table id="manual-tc">
                        <thead>
                          <tr>
                              <th>S.no</th>
                              <th>Step Description</th>
                              <th>Expected Result</th>
                          </tr>
                        </thead>
                        <tbody>
                               <tr>
                                 <td>1</td>
                                 <td>sample step</td>
                                 <td>sample expected result</td>
                               </tr>
                        </tbody>
                    </table>
                </div>

                <div id="Testdata" class="tabcontent">
                    <textarea id="testdata" style="height:600px;width:850px;"></textarea>
                </div>
          </div>
      </div>

      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.5/jstree.min.js"></script>
      <script>
         $(document).ready(function(){
             $('#jstree')

                .on('changed.jstree', function (e, data) {
                      if(data.instance.get_type(data.selected[0]) == 'file'){
                        selectedNode = data.instance.get_node(data.selected[0]).id;
                        currentNodeText = data.instance.get_node(data.selected[0]).text;
                        currentNode = selectedNode;
                        parentPath = [];
                        while(true){
                            parentNodeId = data.instance.get_parent(currentNode);
                            if(parentNodeId == '#'){
                              break;
                            }
                            parentText = data.instance.get_node(parentNodeId).text;
                            parentPath.push(parentText);
                            currentNode = parentNodeId;
                        }

                        parentPath = parentPath.reverse();
                        parentPathStr = "";
                        for(var i = 0; i < parentPath.length;i++){
                          parentPathStr += parentPath[i] + String.fromCharCode(92);
                        }


                        $('#scriptName').val(currentNodeText);
                        $('#scriptTreePath').val(parentPathStr);
                      }
                })

                .jstree({
                     "core" : {
                                "check_callback" : true,
                                'data' : {
                                            'url' : '/api/tree',
                                            'data' : function (node) {
                                                return { 'id' : node.id };
                                            }
                                         }
                               },
                     "types" : {
                                  "#" : { "max_children" : 100, "max_depth" : 10, "valid_children" : ["root"] },
                                  "root" : { "icon" : "/public/images/folder-16-16.png", "valid_children" : ["folder"] , "selected": false},
                                  "folder" : { "icon" : "/public/images/folder-16-16.png", "valid_children" : ["folder","file"] },
                                  "file" : { "icon" : "/public/images/file-16-16.ico", "valid_children" : [] }
                                },
                     "plugins" : [ "changed", "dnd", "sort", "state", "unique", "types" ]
                });
         });

         function addFolder() {
            var treeRef = $('#jstree').jstree(true);
            currentSelected = treeRef.get_selected();
            if (!currentSelected.length) {
              alert("Please select a folder before creating new folder");
              return false;
            }
            currentSelected = currentSelected[0];
            currentSelected = treeRef.create_node(currentSelected, {"type": "folder", "text": prompt("Enter folder name:")});

            if (currentSelected) {
              treeRef.edit(currentSelected);
            }

            postTreeDataToServer();
        };

        function addScript() {
           var treeRef = $('#jstree').jstree(true);
           currentSelected = treeRef.get_selected();
           if (!currentSelected.length) {
             alert("Please select a folder before creating new script");
             return false;
           }
           currentSelected = currentSelected[0];
           currentSelected = treeRef.create_node(currentSelected, {"type": "file", "text": prompt("Enter script name:")});

           if (currentSelected) {
             treeRef.edit(currentSelected);
           }

           postTreeDataToServer();
       };

        function renameNode(){
          var treeRef = $('#jstree').jstree(true);
          currentSelected = treeRef.get_selected();
          if (!currentSelected.length) {
             alert("Please select a folder before renaming");
             return false;
          }
          if(currentSelected == "root"){
            alert("Root folder cannot be renamed!!!");
          }else{
            currentSelected = currentSelected[0];
            treeRef.edit(currentSelected);
            postTreeDataToServer();
          }
        };

        function deleteNode() {
          var treeRef = $('#jstree').jstree(true);
          currentSelected = treeRef.get_selected();
          if (!currentSelected.length) {
            alert("Please select a folder before deleting");
            return false;
          }
          else{
            if(currentSelected == "root"){
              alert("Root folder cannot be deleted!!!");
            }
            else{
                if(confirm("Are you sure to delete this?")){
                    treeRef.delete_node(currentSelected);
                    postTreeDataToServer();
                }
            }
          }
        };

        //This is implementation of "jquery AJAX POST request"
        function postTreeDataToServer(){
            var treeRef = $('#jstree').jstree(true);
            rootJson = treeRef.get_json(null, { "flat" : true });
            $.ajax({
                type:'POST',
                url:'/api/tree',
                data: "[" + JSON.stringify(rootJson) + "]",
                success:function(){
                    console.log("SUCCESS: tree data is added to the file");
                },
                error:function(){
                    console.log("FAILED: failed to add tree data to the file");
                }
            });
        }

        //below function is not used. This is implementation of "jquery AJAX GET request"
        function getTreeDataFromServer(){
            $.ajax({
                type:'GET',
                url: '/api/tree',
                success: function(data){
                   console.log("SUCCESS: Tree data is fetched successfully!!!");
                   console.log(data);
                },
                error: function(){
                   console.log("FAILED: Failed to fetch tree data!!!");
                }
            })
        };
      </script>
      <script>
          function openTab(evt, tabName) {
              var i, tabcontent, tablinks;
              tabcontent = document.getElementsByClassName("tabcontent");
              for (i = 0; i < tabcontent.length; i++) {
                  tabcontent[i].style.display = "none";
              }
              tablinks = document.getElementsByClassName("tablinks");
              for (i = 0; i < tablinks.length; i++) {
                  tablinks[i].className = tablinks[i].className.replace(" active", "");
              }
              document.getElementById(tabName).style.display = "block";
              evt.currentTarget.className += " active";
          }

          document.getElementById("defaultTab").click();
      </script>
   </body>
</html>
